name: Test and Deploy
on:
  push:
    branches:
      - main
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      FIREBASE_EMULATORS_PATH: ${{ github.workspace }}/emulator-cache
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Use Cache for Yarn
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Use cache firebase emulators
        uses: actions/cache@v2
        with:
          path: ${{ env.FIREBASE_EMULATORS_PATH }}
          key: ${{ runner.os }}-firebase-emulators-${{ hashFiles('emulator-cache/**') }}
        continue-on-error: true
      - name: Install Dependencies
        working-directory: ./
        run: yarn --frozen-lockfile
      - name: Lint
        working-directory: ./
        run: yarn lint
      - name: Test
        working-directory: ./
        run: yarn test:ci --token ${{ secrets.FIREBASE_TOKEN_DEV }}

  # build-and-deploy:
  #   name: Build and Deploy
  #   needs: test
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       node-version: [14.x]
  #   env:
  #     NEXT_PUBLIC_API_KEY: YOUR_PROJECT_VALUE
  #     NEXT_PUBLIC_AUTH_DOMAIN: YOUR_PROJECT_VALUE
  #     NEXT_PUBLIC_PROJECT_ID: YOUR_PROJECT_VALUE
  #     NEXT_PUBLIC_STORAGE_BUCKET: YOUR_PROJECT_VALUE
  #     NEXT_PUBLIC_MESSAGING_SENDER_ID: YOUR_PROJECT_VALUE
  #     NEXT_PUBLIC_APP_ID: YOUR_PROJECT_VALUE
  #     NEXT_PUBLIC_MEASUREMENT_ID: YOUR_PROJECT_VALUE

  #   steps:
  #     - name: Checkout Repo
  #       uses: actions/checkout@v2
  #     - name: Use Node.js ${{ matrix.node-version }}
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #     - name: Get yarn cache directory path
  #       id: yarn-cache-dir-path
  #       run: echo "::set-output name=dir::$(yarn cache dir)"
  #     - name: Use Cache for Yarn
  #       uses: actions/cache@v2
  #       id: yarn-cache
  #       with:
  #         path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
  #         key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-yarn-
  #     - name: Install Dependencies
  #       working-directory: ./
  #       run: yarn --frozen-lockfile
  #     - name: Build
  #       working-directory: ./
  #       run: yarn build
  #     - name: Deploy to Firebase
  #       uses: w9jds/firebase-action@master
  #       with:
  #         args: deploy --force
  #       env:
  #         FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN_DEV }}
  #         PROJECT_ID: YOUR_PROJECT_VALUE
